
#primary datasource
spring.datasource.master.jdbc.url=jdbc:mysql://192.168.5.232:3306/master?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false
spring.datasource.master.jdbc.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.master.jdbc.username=root
spring.datasource.master.jdbc.password=root

spring.datasource.master.filters=stat
spring.datasource.master.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.master.initialSize=5
spring.datasource.master.maxActive=20
spring.datasource.master.minIdle=1
spring.datasource.master.maxWait=30000
spring.datasource.master.validationQuery=SELECT '1'
spring.datasource.master.testOnBorrow=false
spring.datasource.master.testOnReturn=false
spring.datasource.master.testWhileIdle=true
spring.datasource.master.poolPreparedStatements=false
spring.datasource.master.maxOpenPreparedStatements=-1
spring.datasource.master.org.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.datasource.master.hibernate.show_sql=true


#secondary datasource
spring.datasource.secondary.jdbc.url=jdbc:mysql://192.168.5.232:3306/secondary?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false
spring.datasource.secondary.jdbc.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.secondary.jdbc.username=root
spring.datasource.secondary.jdbc.password=root

spring.datasource.secondary.filters=stat
spring.datasource.secondary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.secondary.initialSize=5
spring.datasource.secondary.maxActive=20
spring.datasource.secondary.minIdle=1
spring.datasource.secondary.maxWait=30000
spring.datasource.secondary.validationQuery=SELECT '1'
spring.datasource.secondary.testOnBorrow=false
spring.datasource.secondary.testOnReturn=false
spring.datasource.secondary.testWhileIdle=true
spring.datasource.secondary.poolPreparedStatements=false
spring.datasource.secondary.maxOpenPreparedStatements=-1
spring.datasource.secondary.org.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.datasource.secondary.hibernate.show_sql=true

#RabbitMQ
#mq.rabbit.host=rabbitmq.eagle.mzj.net
#mq.rabbit.port=5672
#mq.rabbit.virtualHost=/
#mq.rabbit.username=mzjadmin
#mq.rabbit.password=Mzj1q2w3e4r5t

# REDIS (RedisProperties)
#是否使用连接池
spring.redis.usePool=true
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis连接密码
spring.redis.password=wangrl
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=300
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=100000
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
spring.redis.setNumTestsPerEvictionRun=3
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
spring.redis.setSoftMinEvictableIdleTimeMillis=1800000
#在获取连接的时候检查有效性, 默认false
spring.redis.setTestOnBorrow=false
#在空闲时检查有效性, 默认false
spring.redis.setTestWhileIdle=false
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
spring.redis.setTimeBetweenEvictionRunsMillis=-1